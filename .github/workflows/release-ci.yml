.name: Release CI

on:
  workflow_dispatch:
    inputs:
      title:
        required: false
        default: '**MMRL**'
        description: 'Title'
      message:
        required: false
        default: 'No message.'
        description: 'Message'
      send_telegram:
        description: 'Release to Telegram'
        required: true
        default: false
        type: boolean
      send_playstore:
        description: 'Release on Play Store'
        required: true
        default: false
        type: boolean
      send_github:
        description: 'Release on GitHub'
        required: true
        default: false
        type: boolean

jobs:
  build-release:
    name: Build Release
    uses: ./.github/workflows/build.yml
    with:
      buildType: 'Release'
    secrets: inherit

  release-github:
    if: github.event.inputs.send_github == 'true'
    name: Release to GitHub    
    needs: [build-release]
    uses: ./.github/workflows/github.yml
    with:
      title: ${{ inputs.title }}
      message: ${{ inputs.message }}
      releaseAssetName: ${{ needs.build-release.outputs.release-name }}
    secrets: inherit

  release-telegram:
    if: github.event.inputs.send_telegram == 'true'
    name: Release to Telegram    
    needs: [build-release]
    uses: ./.github/workflows/telegram.yml
    with:
      title: ${{ inputs.title }}
      message: ${{ inputs.message }}
      releaseAssetName: ${{ needs.build-release.outputs.release-name }}
    secrets: inherit

  playstore:
    name: Release to Play Store
    runs-on: ubuntu-latest
    if: github.event.inputs.send_playstore == 'true'
    needs: build-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
            fetch-depth: 0
    
      - name: Set up signing key
        run: |
            if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
                echo keyStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> signing.properties
                echo keyAlias='${{ secrets.KEY_ALIAS }}' >> signing.properties
                echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> signing.properties
                echo keyStore='${{ github.workspace }}/key.jks' >> signing.properties
                echo ${{ secrets.KEY_STORE }} | base64 --decode > ${{ github.workspace }}/key.jks
            fi

      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.3.1
        with:
            validate-wrappers: true
            cache-cleanup: always

      - name: Bundle with Gradle
        run: chmod 755 ./gradlew && ./gradlew bundlePlaystore
      
      - name: Find AAB
        id: find_aab
        run: |
          AAB_PATH=$(find app/build/outputs/bundle/playstore -name "*.aab" | head -n 1)
          echo "AAB_PATH=$AAB_PATH" >> $GITHUB_OUTPUT

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.dergoogler.mmrl
          releaseFiles: ${{ steps.find_aab.outputs.AAB_PATH }}
          track: production
          status: completed
          inAppUpdatePriority: 5
